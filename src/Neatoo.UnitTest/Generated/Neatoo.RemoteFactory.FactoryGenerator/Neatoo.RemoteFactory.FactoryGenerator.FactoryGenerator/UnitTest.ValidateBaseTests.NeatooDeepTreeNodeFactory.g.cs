#nullable enable
using Neatoo.RemoteFactory;
using Neatoo.RemoteFactory.Internal;
using Microsoft.Extensions.DependencyInjection;
using Neatoo.Internal;
using Microsoft.VisualStudio.TestTools.UnitTesting;

/*
							READONLY - DO NOT EDIT!!!!
							Generated by Neatoo.RemoteFactory
*/
namespace Neatoo.UnitTest.ValidateBaseTests
{
    public interface INeatooDeepTreeNodeFactory
    {
    }

    internal class NeatooDeepTreeNodeFactory : FactoryBase<NeatooDeepTreeNode>, INeatooDeepTreeNodeFactory
    {
        private readonly IServiceProvider ServiceProvider;
        private readonly IMakeRemoteDelegateRequest? MakeRemoteDelegateRequest;
        // Delegates
        // Delegate Properties to provide Local or Remote fork in execution
        public NeatooDeepTreeNodeFactory(IServiceProvider serviceProvider, IFactoryCore<NeatooDeepTreeNode> factoryCore) : base(factoryCore)
        {
            this.ServiceProvider = serviceProvider;
        }

        public NeatooDeepTreeNodeFactory(IServiceProvider serviceProvider, IMakeRemoteDelegateRequest remoteMethodDelegate, IFactoryCore<NeatooDeepTreeNode> factoryCore) : base(factoryCore)
        {
            this.ServiceProvider = serviceProvider;
            this.MakeRemoteDelegateRequest = remoteMethodDelegate;
        }

        public static void FactoryServiceRegistrar(IServiceCollection services, NeatooFactory remoteLocal)
        {
            services.AddScoped<NeatooDeepTreeNodeFactory>();
            services.AddScoped<INeatooDeepTreeNodeFactory, NeatooDeepTreeNodeFactory>();
        }
    }
}