#nullable enable
using Neatoo.RemoteFactory;
using Neatoo.RemoteFactory.Internal;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.EntityFrameworkCore;
using Person.Ef;

/*
							READONLY - DO NOT EDIT!!!!
							Generated by Neatoo.RemoteFactory
*/
namespace DomainModel
{
    public static partial class UniqueName
    {
        public delegate Task<bool> IsUniqueName(Guid? id, string firstName, string lastName);
        internal static void FactoryServiceRegistrar(IServiceCollection services, NeatooFactory remoteLocal)
        {
            if (remoteLocal == NeatooFactory.Remote)
            {
                services.AddTransient<UniqueName.IsUniqueName>(cc =>
                {
                    return (id, firstName, lastName) => cc.GetRequiredService<IMakeRemoteDelegateRequest>().ForDelegate<bool>(typeof(UniqueName.IsUniqueName), [id, firstName, lastName]);
                });
            }

            if (remoteLocal == NeatooFactory.Logical || remoteLocal == NeatooFactory.Server)
            {
                services.AddTransient<UniqueName.IsUniqueName>(cc =>
                {
                    return (Guid? id, string firstName, string lastName) =>
                    {
                        var personContext = cc.GetRequiredService<IPersonDbContext>();
                        return UniqueName._IsUniqueName(id, firstName, lastName, personContext);
                    };
                });
            }
        }
    }
}